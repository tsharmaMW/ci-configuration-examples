# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ generateExecutable ]
  pull_request:
    branches: [ generateExecutable ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MATHWORKS_TOKEN: gv8qAx4MC2cqxQLN3CJ0QBWgDFAUp9Ht/lf4DR2m0TyIpbYKRDOSOYi0f76X23BKPpWQLjnl4I3FGAHampAz8xaM9FHEAW4QPj37LnhMUscKmnJf2XS0p6hy4zTbM2c1UznG4/lX0xCvxx1Vvte6qg==
  MATHWORKS_ACCOUNT: kapilg@mathworks.com

jobs:
  build-and-release:

    # A job will run for all the OS present in the matrix
    strategy:
      matrix:
        # os: [ubuntu-20.04, windows-latest]
        # release: [R2022b, R2023a, R2023b]
        os: [macos-12]
        release: [R2023b]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.release }}
          products: MATLAB_Compiler_SDK

      - name: Compile
        uses: matlab-actions/run-command@v1
        with:
          command: mcc -m code/quadraticSolver.m;

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "${{ matrix.os }}-${{ matrix.release }}"
          prerelease: false
          title: "Binary-${{ matrix.os }}-${{ matrix.release }}"
          files: quadraticSolver*